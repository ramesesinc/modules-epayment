import com.rameses.annotations.*

class EPaymentResolverService {

    @Service("OnlinePaymentService")
    def localSvc;

    @DataContext("eor_paymentorder")
    def po_db;

    @DataContext("eor_paymentorder_paid")
    def poPaid_db;

    @DataContext("eor")
    def eor_db;


    @Service(value="epayment/CloudPaymentService", connection="cloud-server")
    def cloudSvc;

    @Service(value="OrgService", connection="local-admin-server")
    def orgSvc;

    @ProxyMethod
    public def getList() {
        def org = orgSvc.getRoot();
        return cloudSvc.getUnpostedPaymentList( [orgcode: org.objid ]);
    }

    @ProxyMethod
    public void resolve( p ) {  
        // check first if the payment order is still in unpaid mode.
        // if it is already paid then we only need to update the EOR in the cloud
        def exists = eor_db.find([ paymentrefid: p.paymentrefid ]).first();
        if ( exists ) {
            cloudSvc.updatePaymentReceipt( r );
        }
        else {
            def r = localSvc.postPayment( p );
            if ( r ) cloudSvc.updatePaymentReceipt( r );
        }
    } 
 
}
