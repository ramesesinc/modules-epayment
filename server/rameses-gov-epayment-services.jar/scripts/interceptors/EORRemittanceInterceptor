import com.rameses.annotations.*

class EORRemittanceInterceptor {

    @DataContext('eor_remittance_lockid') 
    def eor_remittance_lock; 

    @DataContext('eor_remittance_fund') 
    def eor_remittance_fund; 

    @DataContext('eor') 
    def eor; 

    @Before(pattern="PersistenceService.removeEntity", eval="#{ args[0]._schemaname == 'eor_remittance' }")
    public void beforeRemove( evt ) {
        def o = evt.args[0];

        def remittanceid = o.objid; 
        if ( !remittanceid ) return; 

        def findby = [ objid: remittanceid ]; 
        eor_remittance_lock.find( findby ).update([ lockid: new java.rmi.server.UID().toString() ]); 

        def test = eor_remittance_lock.find( findby ).first(); 
        if ( !test?.objid ) return; 

        if ( test.state.toString().toUpperCase() != 'DRAFT' ) 
            throw new Exception("EOR Remittance transaction must be in DRAFT status"); 

        findby.clear(); 
        findby.remittanceid = remittanceid; 
        eor_remittance_fund.find( findby ).delete(); 
        eor.find( findby ).update([ remittanceid: '{NULL}']); 
    } 
}
