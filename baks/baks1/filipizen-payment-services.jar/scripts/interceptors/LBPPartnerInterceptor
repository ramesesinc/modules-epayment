import com.rameses.annotations.*;

class LBPPartnerInterceptor {
	
	def formatter = new java.text.DecimalFormat('0.00');
	
	@After(pattern="EPaymentMethodService.loadPartner", eval="#{args[0].objid.equalsIgnoreCase('LBP')}")
	public void loadPartner( evt ) { 
		def partner = evt.args[0]; 
		def po = evt.args[1]; 

		def amount = po.amount; 
		def webfee = (po.webfee ? po.webfee : 0.00); 

		def samt = (po.amount ? formatter.format( po.amount ) : "");

		def params = [:];
		params.MerchantCode = partner.info?.merchantcode; 
		params.MerchantRefNo = po.controlno; 
		params.Particulars = "Transaction_type=${po.txntypename};Name of Payor=${po.paidby.replaceAll('&','and')};Tax Reference Number=${po.paymentrefid};"; 
		params.Amount = samt;
		params.PayorName = po.paidby;
		params.PayorEmail = ( po.paidbyemail ? po.paidbyemail : '');
		params.ReturnURLOK = ( partner.info?.testsuccessurl ? partner.info?.testsuccessurl : partner.info?.successurl ); 
		params.ReturnURLError = ( partner.info?.testerrorurl ? partner.info?.testerrorurl : partner.info?.errorurl ); 

		def secval = partner.info?.merchantcode + po.controlno + samt.replace('.','');
    	params.Hash = com.rameses.util.Encoder.MD5.encode(secval).toLowerCase();
    	partner.params = params; 
	}


	@After( pattern="FilipizenPaymentService.buildReceiptParams", eval="#{args[0]?.partnercode.toString().toUpperCase() == 'LBP'}") 
	public void buildReceiptParams( evt ) {
		def params = evt.args[0]; 

		params.traceid = params.EppRefNo;
		params.tracedate = params.Datestamp;
		params.amount = params.Amount;

		def particulars = splitParticulars( params.Particulars ); 
		if ( particulars ) {
			params.paymentrefid = particulars['Tax Reference Number'];
		}
	}
	
	def splitParticulars( value ) { 
		if ( value == null || value.toString().trim().length() == 0 ) return null;
		
		def tokens = value.split(';');
		def data = [:];
		tokens.each{
		    def d = it.split('=');
		    data[d[0]] = d[1];
		}
		return data;
	}	
} 