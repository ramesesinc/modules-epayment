import com.rameses.annotations.*;

//***********************
// Landbank services
//***********************
class LbpPaymentPartnerOptionInterceptor {
	
	def formatter = new java.text.DecimalFormat('0.00');


	@After(pattern="CloudPaymentService.getPaymentPartnerOption", eval="#{result.paypartnerid.toLowerCase() == 'lbp' }")
	public void getLbpPayOptions(evt) {
		
		def po = evt.args[0].paymentorder;
		def partner = evt.result.paypartner;

		def amount = po.amount; 
		def webfee = (po.webfee ? po.webfee : 0.00); 
		def samt = (po.amount ? formatter.format( po.amount ) : "");

		def params = [:];
		params.MerchantCode = partner.info?.merchantcode; 
		params.MerchantRefNo = po.objid; 
		params.Particulars = "Transaction_type=${po.txntypename};Name of Payor=${po.paidby.replaceAll('&','and')};Tax Reference Number=${po.objid};"; 
		params.Amount = samt;
		params.PayorName = po.paidby;
		params.PayorEmail = ( po.paidbyemail ? po.paidbyemail : '');
		params.ReturnURLOK = ( partner.info?.testsuccessurl ? partner.info?.testsuccessurl : partner.info?.successurl ); 
		params.ReturnURLError = ( partner.info?.testerrorurl ? partner.info?.testerrorurl : partner.info?.errorurl ); 

		def secval = partner.info?.merchantcode + po.controlno + samt.replace('.','');
    	params.Hash = com.rameses.util.Encoder.MD5.encode(secval).toLowerCase();
		partner.params = params; 
	}

	@After( pattern="CloudPaymentService.getPostPaymentParams", eval="#{args[0]?.paypartnerid.toString().toLowerCase() == 'lbp'}") 
	public void buildReceiptParams( evt ) {
		def params = evt.args[0]; 
		def pmt = evt.result;

		params.traceid = params.EppRefNo;
		params.tracedate = params.Datestamp;
		params.amount = params.Amount;

		def particulars = splitParticulars( params.Particulars ); 
		if ( particulars ) {
			params.paymentrefid = particulars['Tax Reference Number'];
		}
	} 	

	def splitParticulars( value ) { 
		if ( value == null || value.toString().trim().length() == 0 ) return null;
		
		def tokens = value.split(';');
		def data = [:];
		tokens.each{
		    def d = it.split('=');
		    data[d[0]] = d[1];
		}
		return data;
	}

}